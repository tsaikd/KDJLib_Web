apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'org.tsaikd.java'
version = '0.1.0' + (hasProperty('release') ? "" : "-SNAPSHOT")

sourceCompatibility = 1.7
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
	maven {
		url "http://nexus.tsaikd.org/nexus/"
	}
}

dependencies {
	compile 'org.tsaikd.java:KDJLib:0.0.9'
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'org.apache.tomcat:tomcat-jsp-api:7.0.57'
	compile 'com.google.javascript:closure-compiler:v20141215'
	compile 'com.googlecode.htmlcompressor:htmlcompressor:1.5.2'
	compile 'org.mongodb:mongo-java-driver:2.12.4'
	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-io:commons-io:2.4'
	compile 'org.apache.httpcomponents:httpcore:4.3.3'
	compile 'org.apache.httpcomponents:httpclient:4.3.6'
	compile 'commons-logging:commons-logging:1.2'
	testCompile 'junit:junit:4.12'
	testCompile 'org.hamcrest:hamcrest-core:1.3'
}

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

	// do not include transitive dependencies
	transitive = false
}

test {
	testLogging.showStandardStreams = true
}

task sourcesJar(type: Jar, dependsOn:classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar, javadocJar
}

uploadArchives {
	repositories {
		mavenDeployer {
			pom.artifactId = 'KDJLib_Web'
			try {
				repository(url: mavenReleaseUrl) {
					authentication(userName: mavenDeployUser, password: mavenDeployPass)
				}
			} catch (MissingPropertyExceptionmpe) {}
			try {
				snapshotRepository(url: mavenSnapshotUrl) {
					authentication(userName: mavenDeployUser, password: mavenDeployPass)
				}
			} catch (MissingPropertyExceptionmpe) {}
		}
	}
}
